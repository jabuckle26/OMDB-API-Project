!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);var r=function(e){this.html="<div class=film>\n                        <div class=visibleInfo>\n                            <img src="+e.Poster+">\n                            <h4>"+e.Title+'</h4>\n                        </div>\n                        <div class=hiddenInfo>\n                            <a id=myMovies>My Films <i class="fas fa-heart"></i></a>\n                        </div>\n                    </div>'},o="james",i="",c=function(e){l();var t=document.getElementById("filmContainer");Array.from(e.Search).forEach((function(e){var n=new r(e);t.innerHTML+=n.html}))},l=function(){var e=document.querySelectorAll(".film");Array.from(e).forEach((function(e){e.remove()}))},u=function(){var e=document.getElementById("searchBox"),t=e.value;e.value="";var n=document.getElementById("filterYear");i=n.value,n.value="",o=t,a()},a=function(){""===i?fetch("http://www.omdbapi.com/?s="+o+"&apikey=70b6f337").then((function(e){return e.json()})).then((function(e){return c(e)})).catch((function(e){throw new Error(e)})):fetch("http://www.omdbapi.com/?s="+o+"&y="+i+"&apikey=70b6f337").then((function(e){return e.json()})).then((function(e){return c(e)})).catch((function(e){throw new Error(e)}))};document.getElementById("searchButton").addEventListener("click",u),document.getElementById("searchBox").addEventListener("keyup",(function(e){"Enter"===e.code&&u()})),document.getElementById("filterButton").addEventListener("click",(function(){var e=document.getElementById("filterYear");"inline-block"===e.style.display?(e.style.display="none",document.getElementById("filterButton").style.color="white"):(e.style.display="inline-block",document.getElementById("filterButton").style.color="yellow")})),document.getElementById("myMovies").addEventListener("click",(function(){console.log("JAMES")})),a()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,