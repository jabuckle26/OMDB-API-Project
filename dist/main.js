!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){var n="james",r="",o=function(e){c();var t=document.getElementsByTagName("ul")[0];Array.from(e.Search).forEach((function(e){var n=document.createElement("li");n.classList.add("film");var r=document.createElement("img"),o=document.createElement("h4");o.innerHTML=e.Title,r.src=e.Poster,n.append(r),n.append(o),t.append(n)}))},c=function(){var e=document.querySelectorAll(".film");Array.from(e).forEach((function(e){e.remove()}))},u=function(){var e=document.getElementById("searchBox"),t=e.value;e.value="",n=t,l(r)},l=function(e){""===e?fetch("http://www.omdbapi.com/?s="+n+"&apikey=70b6f337").then((function(e){return e.json()})).then((function(e){return o(e)})).catch((function(e){throw new Error(e)})):(console.log(e,"HERE"),fetch("http://www.omdbapi.com/?s="+n+"&y="+e+"&apikey=70b6f337").then((function(e){return e.json()})).then((function(e){return o(e)})).catch((function(e){throw new Error(e)})))};document.getElementById("searchButton").addEventListener("click",u),document.getElementById("searchBox").addEventListener("keyup",(function(e){"Enter"===e.code&&u()})),document.getElementById("filterButton").addEventListener("click",(function(){var e=document.getElementById("filterWindow");"flex"===e.style.display?(e.style.display="none",document.getElementById("filterButton").style.color="white"):(e.style.display="flex",document.getElementById("filterButton").style.color="$background-button1")})),document.getElementById("selectFilter").addEventListener("click",(function(){var e=document.getElementById("filterYear");r=e.value,console.log(r),l(r)})),l(r)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,